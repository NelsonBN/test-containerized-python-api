name: 'Deploy to Docker Hub'

on:
  workflow_dispatch: # To can dispatch manually

  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - main

  push:
    branches:
      - main

env:
  IMAGE_NAME: 'test-python-api'
  IMAGE_TAG: ${{ github.run_number }}


jobs:
  build:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    # - name: 'Set up QEMU'
    #   uses: docker/setup-qemu-action@v3

    # - name: 'Set up Docker Buildx'
    #   uses: docker/setup-buildx-action@v3

    - name: 'Log in to Docker Hub'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

    - name: 'Build and push Docker image'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # tags: |
        #   ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        #   ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
